@using PresentationLayer.Controllers

@using PagedList.Mvc; //import this so we get our HTML Helper
@using PagedList; //import this so we can cast our list to IPagedList (only necessary because ViewBag is dynamic)

@*@model List<ServiceLayer.Models.Book>*@
@model PagedList.IPagedList<ServiceLayer.Models.Book>

@{
	ViewBag.Title = "Books";
}

<!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div class="container">
	<div class="search-div">
		<form asp-controller="Movies" asp-action="Index">
			<div class="form-group">
				<input type="text" name="SearchString" class="form-control" id="search-box" placeholder="Book">
				<button type="submit" class="btn btn-default" id="search-btn" value="Filter">Search</button>
			</div>

		</form>
	</div>

	<!-- loop through each of your products and display it however you want. we're just printing the name here -->
	<ul class="media-list">
		@{
			if (Model != null)
			{
				foreach (var book in Model)
				{
                    <li class="media">
                        <div class="media-heading"><h3>@book.Title</h3></div>
                        <div class="media-body">ISBN: @book.ISBN <br /> @book.publicationinfo</div>
                    </li>
					//<li>@book.Title</li>
				}
			}
		}
	</ul>



	@*@Html.PagedListPager((IPagedList)ViewBag.OnePageOfProducts, page => Url.Action("Index", new { page }))*@


</div>